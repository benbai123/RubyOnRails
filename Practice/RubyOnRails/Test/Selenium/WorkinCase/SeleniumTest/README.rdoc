== README

=== This rdoc is under working, will be finished before 9/11 (I guess), you can give it a try now however.

=== Introduction

This is a sample project regarding how to run Selenium Auto Testing with Rails and Jenkins.

* Target
Let anyone who can type in terminal and editor can run Selenium Browser Automation easily in less than 1 hour (at least, on Ubuntu).

* Ruby version
2.1

* How to run the test suite

    rake test:fileset

=== Outline

To run it quickly from terminal at local machine, please refer to Deployment_Instructions[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#deployment-instructions].

To run it with Remote WebDriver to test with Selenium Standalone Server on Remote (or Local) machine, please refer to Run_With_Remote_WebDriver[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#run-with-remote-webdriver]
(Can skip this part if you just want to run it on local machine from terminal.)

To run it with Jenkins, please refer to
Run_With_Jenkins[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#run-with-jenkins]
(Can skip this part if you just want to run it from terminal.)
(NOTE: Jenkins or scheduled crontab can only test with Remote WebDriver except using headless browser)

For more information about variables please refer to Jenkins_Job_Settings[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#jenkins-job-settings].

Regarding frequently used Selenium functions in Ruby, please refer to selenium_methods_test.rb[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/SeleniumTest/test/integration/selenium_methods_test.rb] and Ruby_Bindings[https://code.google.com/p/selenium/wiki/RubyBindings]

For more information, please refer to Selenium with Rails -- The Working Case (http://happy-rails-trial.blogspot.tw/2015/08/selenium-with-rails-working-case.html)

=== Deployment Instructions

At first, you need to install Rails 4.1, the commands on Ubuntu 14.04 are:

    # Install ruby 2.1
    sudo add-apt-repository ppa:brightbox/ruby-ng
    sudo apt-get update
    sudo apt-get install ruby2.1
    
    # Install ruby Dev-Kit
    sudo apt-get install ruby2.1-dev
    
    # Install sqlite3 (but no DB Needed for this project)
    sudo apt-get install sqlite3
    
    # Install sqlite3 Dev-Kit
    sudo apt-get install libsqlite3-dev
    
    # Install nodejs (javascript-runtime)
    sudo apt-get install nodejs
    
    # Install Rails
    sudo gem install rails -v "=4.1"

Then clone this repository, after that you should be able to run it from terminal:
    
    # install git
    sudo apt-get install git
    # clone repository
    git clone https://github.com/benbai123/RubyOnRails.git
    # go to this project
    cd RubyOnRails/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest
    # bundle install
    bundle install
    
    # For correct output information, modify
    # test/test_helper.rb#L158 based on
    # URL/Port of your environment
    
    # get IP information from terminal
    ifconfig
    # modify test/test_helper.rb
    gedit test/test_helper.rb
    # than close gedit and continue
    
    # run all integration test with the customized flow
    rake test:fileset
    # or run all specified cases (under test/integration)
    # cases="['case1', 'case2', ...]" rake test:fileset
    
also remember run rails app in another terminal window

    #
    # 2 majore pages
    # http://localhost:3000/vt/browse
    # and
    # http://localhost:3000/vt/cases
    #
    rails s

You can also refer to the short video contains whole process above:
Rails_Selenium_Working_Case_Deployment_Instructions[https://www.youtube.com/watch?v=vnXCo-JBfLg]

If you run test cases with Jenkins often, you probably will want to run rails app with user jenkins for permission issue (Regarding to manage images from visual testing):

    # cd to rails project folder first
     
    # make rails project folder can be
    # accessed by jenkins
    # use 777 or any other proper value
    sudo chmod 777 -R .
     
    # switch user to jenkins
    sudo su jenkins
     
    # start rails app by user jenkins
    rails s

NOTE: Just remind again, for correct output information, you need to modify test_helper.rb#L158[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest/test/test_helper.rb#L158] based on URL/Port of your environment

=== Run With Remote WebDriver

Before you continue this part, make sure you have done previous part Deployment_Instructions[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#deployment-instructions]

==== Start Selenium-Standalone-Server

There are already some ready-to-use resources in this repo (but not in this project).

The first step is still clone this project if needed, then

* For Windows

Go to win_folder[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/SeleniumTest/vendor/win_folder]
Then simply double-click selenium/*.bat to launch Selenium Standalone Server.

selenium/startup.bat[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/SeleniumTest/vendor/win_folder/selenium/startup.bat]
Port 4444, Support IE, Chrome and Firefox Portable v_38.

selenium/startOpera.bat[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/SeleniumTest/vendor/win_folder/selenium/startOpera.bat]
Port 5555, Support IE, Opera and Firefox Portable v_39.

selenium/startup64.bat[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/SeleniumTest/vendor/win_folder/selenium/startup64.bat]
Port 4444, Support IE(64-bit), Chrome and Firefox Portable v_38.

You can start multiple Selenium Standalone Server on different ports if needed.

* For Ubuntu

Go to ubuntu_folder[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/SeleniumTest/vendor/ubuntu_folder]
Then run selenium/startup.sh to launch Selenium Standalone Server, it supports only Firefox.

==== Run with "browsers" parameter

Assume you have started Selenium Standalone Server with startup.bat and startOpera.bat on Windows, your IP is 192.168.31.169, then you can test IE and Opera by specify a 'browsers' array as below:

    browsers="[{'url' => '192.168.31.169', 'port' => '5555', 'browser' => 'opera'}, {'url' => '192.168.31.169', 'browser' => 'internet_explorer'}]" rake test:fileset


The short vidwo below shows how to start Selenium Standalone Server on windows and test it remotely (assume you already installed Github_Desktop[https://desktop.github.com/] or something else and has git-shell to use):

Rails_Selenium_Working_Case_Run_With_Remote_WebDriver[https://www.youtube.com/watch?v=tBdpj0CDz9Q]

=== Run With Jenkins

Before you continue this part, make sure you have done previous two parts Deployment_Instructions[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#deployment-instructions] and Run_With_Remote_WebDriver[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#run-with-remote-webdriver]

==== Install Jenkins

First need to install Jenkins with a few commands:

    # Install Oracle JDK/JRE
    # (You can choose any other JDK/JRE you want)
    sudo apt-get install python-software-properties
    sudo add-apt-repository ppa:webupd8team/java
    sudo apt-get update
    sudo apt-get install oracle-java7-installer

    # Install Jenkins
    wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
    sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
    sudo apt-get update
    sudo apt-get install jenkins

Now you can link to jenkins at localhost and start to use it:

http://localhost:8080/
(The first time probably load longer)

==== Create Jenkins Job

From Jenkins dashboard, click New Item, select Freestyle project and fill the fields as described in Jenkins_Job_Settings[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#jenkins-job-settings]

==== Run it by Jenkins

Change mode of the folder test/visualTesting first.

    chmod 777 -R test/visualTesting

From Project page, click Build with parameters and fill/modify parameters as needed then run it.

The short video below for this fragment:

    TODO: add video

=== Jenkins Job Settings

==== This build is parameterized

There are four parameters, cases, browsers, pageurl and skipRealDiff

* NOTE: The default values are just sample values, edit them as needed.

cases, Type: String, Usage: used to specify a set of test cases to run.

Required? False, will run all test case under test/integration if missing.

    Default value
    ['simple_test']
    Desc
    test case name, quoted with single quote, separated with comma


browsers, Type: String, Usage: used to specify a set of remote browsers to test.

Required? True if run with Jenkins since Jenkins can only run with Remote WebDriver. False if run with terminal.

    Default value
    [{'url' => '192.168.31.169'}, {'url' => '192.168.31.169', 'browser' => 'internet_explorer'}]
    Desc
    # usage:
    # [{'url' => 'remote url', 'port' => 'port number', 'browser' => 'browser name', 'caps' => capabilities_hash}, ...]
    
    # url: required, url of remote selnium server
    # port: optional, default '4444'
    # browser: optional, default 'firefox', also supports 'internet_explorer', 'chrome', 'opera'
    # caps: optional, will override desired capabilities if provided
    
    # e.g.
    # [{'url' => '192.168.31.169'}]
    # 
    # [{'url' => '192.168.31.169'}, {'url' => '192.168.31.169', 'port' => '5555', 'browser' => 'opera'}]
    # 
    # [{'url' => '192.168.31.169','browser' => 'chrome'}, {'url' => '192.168.31.169', 'port' => '5555', 'browser' => 'opera'}]
    # 
    # [{'url' => '192.168.31.169','browser' => 'chrome', 'caps' => {'chromeOptions' => {'args' => ['--ignore-certificate-errors', '--disable-popup-blocking', '--disable-translate', '--test-type']}}}, {'url' => '192.168.31.169', 'browser' => 'internet_explorer'}]


pageurl, Type: String, Usage: provide a way to set the URL of Web Page to connect.

Required? False, just use it as needed.

If you specified it, you can get it by calling getPageURL in test case (if extends ActionDispatch::IntegrationTest), see

test_helper.rb#L186[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest/test/test_helper.rb#L186]

    Default value
    http://192.168.31.169:8080
    Desc
    domain url including port of web server


skipRealDiff, Type: String, Usage: specify whether skip image processing.

Required? False, will do image processing and probably take a loooong time if imssing.

Most of the time is caused by ChunkyPNG::Image.from_file since decoding PNG files is slow.

    Default value
    true
    Desc
    whether skip diff process, just compare binary file (will be much faster)
    any value will be faise except 'true'

==== Build step (Execute shell)

NOTE: update the path of first cd as needed.

    # go to folder of test rails app
    cd /home/benbai/Things/github/RubyOnRails/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest
    
    # run test case, all images of visual testing will be stored in test/visualTesting/Jenkins
    failedmark=$BUILD_NUMBER skipRealDiff=$skipRealDiff task_filename=$BUILD_TAG runner="Jenkins" pageurl=$pageurl cases=$cases browsers=$browsers rake test:fileset
    
    # chmod so other user can manage images created by jenkins
    chmod -R 777 test/visualTesting/Jenkins
    
    # mark build as failed if the file test/failed/$BUILD_NUMBER.txt exists
    if [ -f test/failed/$BUILD_NUMBER.txt ]; then
        rm -rf test/failed/$BUILD_NUMBER.txt
        exit -1
    fi

