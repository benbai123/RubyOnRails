== README

* Ruby version 2.1

* How to run the test suite


    rake test:fileset


For more information about variables please refer to Jenkins_Job_Settings[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#jenkins-job-settings] below.

To run it quickly from terminal, please refer to Deployment_Instructions[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#deployment-instructions].

To run it with Jenkins on real (not headless) browser, please refer to Run_With_Remote_WebDriver[https://github.com/benbai123/RubyOnRails/tree/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest#run-with-remote-webdriver]

=== Deployment Instructions

At first, you need to install Rails 4.1, on Ubuntu 14.04 the commands are:

    # Install ruby 2.1
    sudo add-apt-repository ppa:brightbox/ruby-ng
    sudo apt-get update
    sudo apt-get install ruby2.1
    
    # Install ruby Dev-Kit
    sudo apt-get install ruby2.1-dev
    
    # Install sqlite3 (but no DB Needed for this project)
    sudo apt-get install sqlite3
    
    # Install sqlite3 Dev-Kit
    sudo apt-get install libsqlite3-dev
    
    # Install nodejs (javascript-runtime)
    sudo apt-get install nodejs
    
    # Install Rails
    sudo gem install rails -v "=4.1"

Clone this repository then you should be able to run it from terminal:
    
    # clone repository
    git clone https://github.com/benbai123/RubyOnRails.git
    # go to this project
    cd RubyOnRails/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest
    # bundle install
    bundle install
    # run all integration test with the customized flow
    rake test:fileset
    # or run all specified cases (under test/integration)
    # cases="['case1', 'case2', ...]" rake test:fileset
    
also remember run rails app in another terminal window

    rails s

NOTE: For correct output information, you need to modify test_helper.rb#L234[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest/test/test_helper.rb#L234]
and test_helper.rb#L248[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest/test/test_helper.rb#L248] based on URL/Port of your environment

Then you can create a Jenkins Job as below.

For more information, please refer to Selenium with Rails -- The Working Case (http://happy-rails-trial.blogspot.tw/2015/08/selenium-with-rails-working-case.html)

=== Run With Remote WebDriver

    TODO

=== Jenkins Job Settings


==== This build is parameterized

There are four parameters, cases, browsers, pageurl and skipRealDiff


cases, Type: String, Usage: used to specify a set of test cases to run.

Required? False, will run all test case under test/integration if missing.

    Default value
    ['simple_test']
    Desc
    test case name, quoted with single quote, separated with comma


browsers, Type: String, Usage: used to specify a set of remote browsers to test.

Required? True if run with Jenkins since Jenkins can only run with Remote WebDriver. False if run with terminal.

    Default value
    [{'url' => '192.168.31.169'}, {'url' => '192.168.31.169', 'browser' => 'internet_explorer'}]
    Desc
    # usage:
    # [{'url' => 'remote url', 'port' => 'port number', 'browser' => 'browser name', 'caps' => capabilities_hash}, ...]
    
    # url: required, url of remote selnium server
    # port: optional, default '4444'
    # browser: optional, default 'firefox', also supports 'internet_explorer', 'chrome', 'opera'
    # caps: optional, will override desired capabilities if provided
    
    # e.g.
    # [{'url' => '192.168.31.169'}]
    # 
    # [{'url' => '192.168.31.169'}, {'url' => '192.168.31.169', 'port' => '5555', 'browser' => 'opera'}]
    # 
    # [{'url' => '192.168.31.169','browser' => 'chrome'}, {'url' => '192.168.31.169', 'port' => '5555', 'browser' => 'opera'}]
    # 
    # [{'url' => '192.168.31.169','browser' => 'chrome', 'caps' => {'chromeOptions' => {'args' => ['--ignore-certificate-errors', '--disable-popup-blocking', '--disable-translate', '--test-type']}}}, {'url' => '192.168.31.169', 'browser' => 'internet_explorer'}]


pageurl, Type: String, Usage: provide a way to set the URL of Web Page to connect.

Required? False, just use it as needed.

If you specified it, you can get it by calling getPageURL in test case (if extends ActionDispatch::IntegrationTest), see

test_helper.rb#L189[https://github.com/benbai123/RubyOnRails/blob/master/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest/test/test_helper.rb#L189]

    Default value
    http://192.168.31.169:8080
    Desc
    domain url including port of web server


skipRealDiff, Type: String, Usage: specify whether skip image processing.

Required? False, will do image processing and probably take a loooong time if imssing.

Most of the time is caused by ChunkyPNG::Image.from_file since decoding PNG files is slow.

    Default value
    true
    Desc
    whether skip diff process, just compare binary file (will be much faster)
    any value will be faise except 'true'

==== Build step (Execute shell)

    # go to folder of test rails app
    cd /home/benbai/Things/data/github/RubyOnRails/Practice/RubyOnRails/Test/Selenium/WorkinCase/SeleniumTest
    
    # run test case, all images of visual testing will be stored in test/visualTesting/Jenkins
    failedmark=$BUILD_NUMBER skipRealDiff=$skipRealDiff task_filename=$BUILD_TAG runner="Jenkins" pageurl=$pageurl cases=$cases browsers=$browsers rake test:fileset
    
    # chmod so other user can manage images created by jenkins
    chmod -R 777 test/visualTesting/Jenkins
    
    # mark build as failed if the file test/failed/$BUILD_NUMBER.txt exists
    if [ -f test/failed/$BUILD_NUMBER.txt ]; then
        rm -rf test/failed/$BUILD_NUMBER.txt
        exit -1
    fi

